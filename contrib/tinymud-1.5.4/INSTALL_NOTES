This is Tinymud 1.5.4F updated for newer systems.  The functionality is the 
same and maybe even the bugs.  Hopfully I didn't introduce any new ones.

This release was compiled and tested on the following platforms:

* Microsoft Windows XP Service Pack 2 
  CYGWIN_NT-5.1 1.5.18(0.132/4/2) using gcc 3.4.4 (cygming special)
  CYGWIN_NT-5.1 1.5.18(0.136/4/2) using gcc 3.3.3 (cygming special)
  Borland C++ 5.5.1 for Win32 (free compiler release)
  Borland C++ 5.3 for Win32 (Builder v3.0)
  Digital Mars C/C++ Compiler Version 8.42n
  Microsoft Visual C/C++ v7.1 (Visual C++ Toolkit 2003)
  Microsoft Visual C/C++ v6.0
  Logiciels/Informatique lcc-win32 version 3.8 

* Red Hat Linux release 6.2 (Zoot) Kernel 2.2.14-5.0 on an i486 with 
  gcc version egcs-2.91.66 19990314/Linux (egcs-1.1.2 release)

* FreeBSD 5.3-BETA4 
  gcc version 3.4.2 [FreeBSD] 20040728

* Gentoo Linux 2.6.10-gentoo-r6
  gcc version 3.3.5 20050130 (Gentoo Linux 3.3.5-r1, ssp-3.3.5-1, pie-8.7.7.1)

* Debian Linux 2.6.8-1-38  
  gcc version 3.3.5 (Debian 1:3.3.5=5)

* SuSE Linux 2.6.4-52-default
  gcc version 3.3.3 (SuSE Linux)
  
-------------------------------------------------------------------------------

Installation

  * See Customization below first.

  * For Linux and Cygwin - type 'make'.   

  * For FreeBSD - type 'gmake'.
  
  * For Windows using Borland - ensure the Borland compiler bin directory 
    is in your path, then type 'make -fMakefile.bor'.
    - All executables will be linked with the RTL and without debugging symbols.
      To link a static executable  - use 'make -f Makefile.bor -DSTATIC'
      To include debugging symbols - use 'make -f Makefile.bor -DDEBUG'
      Or for both                  - use 'make -f Makefile.bor -DDEBUG -DSTATIC'

  * For Windows using Digital Mars - ensure the Digital Mars bin directory 
    is in your path, then type 'make -fMakefile.dgm'.

  * For Windows using Microsoft Visual C - ensure your Visual C bin directory
    is in your path and your INCLUDE and LIB environment variables are setup
    correctly.
    - With Visual C++ 6.0 you may need to run the vcvars32.bat file.
    - With Visual C++ Toolkit 2003 and Platform SDK you may need to use both 
      the setenv.cmd and vsvars32.bat
    Then type 'nmake -f makefile.vc'
    - To link with debugging information type 'set DEBUG=1' and then use
      'nmake -f makefile.vc'

  * For Windows using LCC - ensure the LCC bin directory is in your path, 
    then type 'make -f Makefile.lcc'.  

-------------------------------------------------------------------------------

Customization

  * Read the README file and small.db-README on how to use it.  
  
  * Edit the Makefile and change the defines to include or exclude features.
  
  * Compile the mud and utilities using 'make'.  See Installation above.
  
  * Start the mud up.
    $ netmud small.db dump.db 4201
    
  * None if the restart scripts have been tested in this distribution and 
    probably not work, so you will have to write your own.   

-------------------------------------------------------------------------------

This code and my changes are released under the original conditions which are 
found in 'copyright.h'.

Enjoy.

Jon Lambert - aka Tyche
jlsysinc@alltel.net
